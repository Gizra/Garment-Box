<?php
/**
 * @file
 * Code for the Opengizra Item feature.
 */

include_once 'opengizra_item.features.inc';

/**
 * Implements hook_node_presave().
 *
 * Populate the Season reference field based on the selected entity.
 */
function opengizra_item_node_presave($node) {
  if ($node->type != 'item_variant' && $node->type != 'item') {
    return;
  }

  $wrapper = entity_metadata_wrapper('node', $node);
  $nids = array_keys(opengizra_general_get_node_hierarchy($node));
  $wrapper->field_reference_hierarchy->set($nids);
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function opengizra_item_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function opengizra_item_field_formatter_info() {
  return array(
    'opengizra_size_info' => array(
      'label' => t('Size information'),
      'field types' => array('field_collection'),
    ),
    'opengizra_slideshow' => array(
      'label' => t('Opengizra slideshow'),
      'field types' => array('image'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function opengizra_item_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $settings = $display['settings'];

  switch ($display['type']) {
    case 'opengizra_size_info':
      $sizes = array();
      foreach ($items as $item) {
        $wrapper = entity_metadata_wrapper('field_collection_item', $item['value']);
        $sizes[] = check_plain($wrapper->field_size->label());
      }
      $element[0] = array();
      $element[0]['#markup'] = theme('item_list', array('items' => $sizes));
      return $element;

    case 'opengizra_slideshow':
      $options = array();
      foreach ($items as &$item) {
        $item = theme('image_style', array('style_name' => 'variant_preview', 'path' => $item['uri']));
      }

      $element[0] = array();
      $element[0]['#markup'] = theme('jcarousel', array('items' => $items, 'options' => $options));
      return $element;
  }
}
