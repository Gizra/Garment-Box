<?php
/**
 * @file
 * Code for the Opengizra General feature.
 */

/**
 * Implements hook_init().
 */
function opengizra_general_init() {
  if (($node = menu_get_object()) && $nids = opengizra_general_get_node_hierarchy($node)) {
    $breadcrumb[] = l(t('Home'), '<front>');
    foreach ($nids as $nid => $title) {
      $breadcrumb[] = l($title, 'node/' . $nid);
    }
    drupal_set_breadcrumb($breadcrumb);
  }
}

/**
 * Get the hierachy for a node.
 *
 * @todo: Move to general module.
 *
 * @param $node
 *   The node object to check the hierachy.
 *
 * @return
 *   Array keyed with node IDs and the node title as value, sorted by
 *   hierarchy. If no hierarchy found returns FALSE.
 */
function opengizra_general_get_node_hierarchy($node, &$nids = array()) {
  if ($nids === FALSE) {
    // We reached a content type that has no hierarchy so break here.
    return;
  }
  if ($node->type == 'collection') {
    // Node is top most, so return early.
    $nids[$node->nid] = $node->title;
    return $nids;
  }

  $field_name = FALSE;

  $wrapper = entity_metadata_wrapper('node', $node);
  switch ($node->type) {
    case 'item':
      $field_name = 'field_collection';
      break;

    case 'item_instance':
      $field_name = 'field_item';
      break;

    case 'task':
      $field_name = 'field_entity_reference';
      break;

    case 'pattern':
      $field_name = 'field_pattern_entity_reference';
      break;
  }

  if (!$field_name) {
    $nids = FALSE;
    return;
  }

  $referenced_node = $wrapper->{$field_name}->value();
  $nids[$referenced_node->nid] = $referenced_node->title;
  opengizra_general_get_node_hierarchy($referenced_node, $nids);

  return array_reverse($nids, TRUE);
}

